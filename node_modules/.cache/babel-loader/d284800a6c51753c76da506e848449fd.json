{"ast":null,"code":"import _classCallCheck from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kara/code/kara22/comet_sdr_hunting/client/src/components/leads/LeadShow.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchLead } from \"../../actions\";\n\nvar LeadShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LeadShow, _Component);\n\n  function LeadShow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LeadShow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LeadShow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderLogs = function (logs) {\n      if (logs) {\n        var newLogs = logs.reverse();\n        return newLogs.map(function (log) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 13\n            },\n            __self: this\n          }, log);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(LeadShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchLead(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.lead) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var _this$props$lead = this.props.lead,\n          title = _this$props$lead.title,\n          company = _this$props$lead.company,\n          first_name = _this$props$lead.first_name,\n          last_name = _this$props$lead.last_name,\n          profile_image_url = _this$props$lead.profile_image_url,\n          level = _this$props$lead.level,\n          logs = _this$props$lead.logs,\n          location = _this$props$lead.location;\n      return React.createElement(\"div\", {\n        className: \"ui segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui two column very relaxed grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"ui small circular image centered\",\n        src: profile_image_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, first_name, \" \", last_name), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, title), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, company), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"map marker alternate icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, location)), this.renderLogs(logs)), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"ui vertical divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"and\"));\n    }\n  }]);\n\n  return LeadShow;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    lead: state.leads[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchLead: fetchLead\n})(LeadShow);","map":{"version":3,"sources":["/Users/kara/code/kara22/comet_sdr_hunting/client/src/components/leads/LeadShow.js"],"names":["React","Component","connect","fetchLead","LeadShow","renderLogs","logs","newLogs","reverse","map","log","props","match","params","id","lead","title","company","first_name","last_name","profile_image_url","level","location","mapStateToProps","state","ownProps","leads"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAKFC,U,GAAa,UAAAC,IAAI,EAAI;AACjB,UAAIA,IAAJ,EAAU;AACN,YAAMC,OAAO,GAAGD,IAAI,CAACE,OAAL,EAAhB;AACA,eAAOD,OAAO,CAACE,GAAR,CAAY,UAAAC,GAAG;AAAA,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,GAAL,CAAJ;AAAA,SAAf,CAAP;AACH;AACJ,K;;;;;;;wCATmB;AAChB,WAAKC,KAAL,CAAWR,SAAX,CAAqB,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACH;;;6BASQ;AACL,UAAI,CAAC,KAAKH,KAAL,CAAWI,IAAhB,EAAsB;AAClB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;;AAHI,6BAaD,KAAKJ,KAAL,CAAWI,IAbV;AAAA,UAKDC,KALC,oBAKDA,KALC;AAAA,UAMDC,OANC,oBAMDA,OANC;AAAA,UAODC,UAPC,oBAODA,UAPC;AAAA,UAQDC,SARC,oBAQDA,SARC;AAAA,UASDC,iBATC,oBASDA,iBATC;AAAA,UAUDC,KAVC,oBAUDA,KAVC;AAAA,UAWDf,IAXC,oBAWDA,IAXC;AAAA,UAYDgB,QAZC,oBAYDA,QAZC;AAcL,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,kCADd;AAEI,QAAA,GAAG,EAAEF,iBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,UADL,OACkBC,SADlB,CALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,KAAL,CARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,OAAL,CATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKK,QADL,CADJ,CAVJ,EAgBK,KAAKjB,UAAL,CAAgBC,IAAhB,CAhBL,CADJ,EAmBI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAnBJ,CADJ,EA2BI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3BJ,CADJ;AA+BH;;;;EAzDkBL,S;;AA4DvB,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AAAEV,IAAAA,IAAI,EAAES,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAACb,KAAT,CAAeC,MAAf,CAAsBC,EAAlC;AAAR,GAAP;AACH,CAFD;;AAIA,eAAeZ,OAAO,CAClBqB,eADkB,EAElB;AAAEpB,EAAAA,SAAS,EAATA;AAAF,CAFkB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchLead } from \"../../actions\";\n\nclass LeadShow extends Component {\n    componentDidMount() {\n        this.props.fetchLead(this.props.match.params.id);\n    }\n\n    renderLogs = logs => {\n        if (logs) {\n            const newLogs = logs.reverse();\n            return newLogs.map(log => <li>{log}</li>);\n        }\n    };\n\n    render() {\n        if (!this.props.lead) {\n            return <div>Loading...</div>;\n        }\n        const {\n            title,\n            company,\n            first_name,\n            last_name,\n            profile_image_url,\n            level,\n            logs,\n            location\n        } = this.props.lead;\n        return (\n            <div className=\"ui segment\">\n                <div className=\"ui two column very relaxed grid\">\n                    <div className=\"column\">\n                        <img\n                            className=\"ui small circular image centered\"\n                            src={profile_image_url}\n                        />\n                        <h1>\n                            {first_name} {last_name}\n                        </h1>\n                        <h2>{title}</h2>\n                        <h3>{company}</h3>\n                        <p>\n                            <i className=\"map marker alternate icon\">\n                                {location}\n                            </i>\n                        </p>\n\n                        {this.renderLogs(logs)}\n                    </div>\n                    <div className=\"column\">\n                        <ul />\n                        <p />\n                        <p />\n                        <p />\n                    </div>\n                </div>\n                <div className=\"ui vertical divider\">and</div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { lead: state.leads[ownProps.match.params.id] };\n};\n\nexport default connect(\n    mapStateToProps,\n    { fetchLead }\n)(LeadShow);\n"]},"metadata":{},"sourceType":"module"}