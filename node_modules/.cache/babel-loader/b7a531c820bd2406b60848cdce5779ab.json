{"ast":null,"code":"import _classCallCheck from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kara/code/kara22/comet_sdr_hunting/client/src/components/leads/LeadScrapForm.js\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nvar LeadScrapForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LeadScrapForm, _Component);\n\n  function LeadScrapForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LeadScrapForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LeadScrapForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderError = function (_ref) {\n      var error = _ref.error,\n          touched = _ref.touched;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, error));\n      }\n    };\n\n    _this.renderInput = function (_ref2) {\n      var input = _ref2.input,\n          label = _ref2.label,\n          meta = _ref2.meta;\n      var classname = \"field \".concat(meta.error && meta.touched ? \"error\" : \"\");\n      return React.createElement(\"div\", {\n        className: classname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        //autoComplete=\"off\"\n        type: input.name === \"level\" ? \"number\" : \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {\n      // this.props.onSubmit(formValues);\n      console.log(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(LeadScrapForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"ui form error\",\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"sales_navigator_search_url\",\n        label: \"Paste your sales navigator search results url\",\n        component: this.renderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"linkedin_session_cookie\",\n        label: \"Paste your linkedin session cookie\",\n        component: this.renderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return LeadScrapForm;\n}(Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.sales_navigator_search_url) {\n    errors.sales_navigator_search_url = \"You must paste your search navigator url\";\n  }\n\n  if (!formValues.linkedin_session_cookie) {\n    errors.linkedin_session_cookie = \"You must paste your linkedin session cookie\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"leadScrapForm\",\n  validate: validate\n})(LeadScrapForm);","map":{"version":3,"sources":["/Users/kara/code/kara22/comet_sdr_hunting/client/src/components/leads/LeadScrapForm.js"],"names":["React","Component","Field","reduxForm","LeadScrapForm","renderError","error","touched","renderInput","input","label","meta","classname","name","onSubmit","formValues","console","log","props","handleSubmit","validate","errors","sales_navigator_search_url","linkedin_session_cookie","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;IAEMC,a;;;;;;;;;;;;;;;;;;UACFC,W,GAAc,gBAAwB;AAAA,UAArBC,KAAqB,QAArBA,KAAqB;AAAA,UAAdC,OAAc,QAAdA,OAAc;;AAClC,UAAIA,OAAO,IAAID,KAAf,EAAsB;AAClB,eACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBA,KAAzB,CADJ,CADJ;AAKH;AACJ,K;;UACDE,W,GAAc,iBAA4B;AAAA,UAAzBC,KAAyB,SAAzBA,KAAyB;AAAA,UAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,UAAXC,IAAW,SAAXA,IAAW;AACtC,UAAMC,SAAS,mBAAYD,IAAI,CAACL,KAAL,IAAcK,IAAI,CAACJ,OAAnB,GAA6B,OAA7B,GAAuC,EAAnD,CAAf;AACA,aACI;AAAK,QAAA,SAAS,EAAEK,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,KAAR,CADJ,EAEI,+CACQD,KADR;AAEI;AACA,QAAA,IAAI,EAAEA,KAAK,CAACI,IAAN,KAAe,OAAf,GAAyB,QAAzB,GAAoC,MAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAOK,MAAKR,WAAL,CAAiBM,IAAjB,CAPL,CADJ;AAWH,K;;UAEDG,Q,GAAW,UAAAC,UAAU,EAAI;AACrB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,K;;;;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,eADd;AAEI,QAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWC,YAAX,CAAwB,KAAKL,QAA7B,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,4BADT;AAEI,QAAA,KAAK,EAAC,+CAFV;AAGI,QAAA,SAAS,EAAE,KAAKN,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EASI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,yBADT;AAEI,QAAA,KAAK,EAAC,oCAFV;AAGI,QAAA,SAAS,EAAE,KAAKA,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAcI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,CADJ,CADJ;AAoBH;;;;EAnDuBP,S;;AAsD5B,IAAMmB,QAAQ,GAAG,SAAXA,QAAW,CAAAL,UAAU,EAAI;AAC3B,MAAMM,MAAM,GAAG,EAAf;;AACA,MAAI,CAACN,UAAU,CAACO,0BAAhB,EAA4C;AACxCD,IAAAA,MAAM,CAACC,0BAAP,GACI,0CADJ;AAEH;;AACD,MAAI,CAACP,UAAU,CAACQ,uBAAhB,EAAyC;AACrCF,IAAAA,MAAM,CAACE,uBAAP,GACI,6CADJ;AAEH;;AAED,SAAOF,MAAP;AACH,CAZD;;AAcA,eAAelB,SAAS,CAAC;AACrBqB,EAAAA,IAAI,EAAE,eADe;AAErBJ,EAAAA,QAAQ,EAARA;AAFqB,CAAD,CAAT,CAGZhB,aAHY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass LeadScrapForm extends Component {\n    renderError = ({ error, touched }) => {\n        if (touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    };\n    renderInput = ({ input, label, meta }) => {\n        const classname = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n        return (\n            <div className={classname}>\n                <label>{label}</label>\n                <input\n                    {...input}\n                    //autoComplete=\"off\"\n                    type={input.name === \"level\" ? \"number\" : \"text\"}\n                />\n                {this.renderError(meta)}\n            </div>\n        );\n    };\n\n    onSubmit = formValues => {\n        // this.props.onSubmit(formValues);\n        console.log(formValues);\n    };\n\n    render() {\n        return (\n            <div>\n                <form\n                    className=\"ui form error\"\n                    onSubmit={this.props.handleSubmit(this.onSubmit)}\n                >\n                    <Field\n                        name=\"sales_navigator_search_url\"\n                        label=\"Paste your sales navigator search results url\"\n                        component={this.renderInput}\n                    />\n                    <Field\n                        name=\"linkedin_session_cookie\"\n                        label=\"Paste your linkedin session cookie\"\n                        component={this.renderInput}\n                    />\n                    <button className=\"ui button primary\">Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst validate = formValues => {\n    const errors = {};\n    if (!formValues.sales_navigator_search_url) {\n        errors.sales_navigator_search_url =\n            \"You must paste your search navigator url\";\n    }\n    if (!formValues.linkedin_session_cookie) {\n        errors.linkedin_session_cookie =\n            \"You must paste your linkedin session cookie\";\n    }\n\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"leadScrapForm\",\n    validate\n})(LeadScrapForm);\n"]},"metadata":{},"sourceType":"module"}