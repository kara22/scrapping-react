{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/kara/code/kara22/comet_sdr_hunting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport leads from \"../apis/leads\";\nimport history from \"../history\";\nimport { SIGN_IN, SIGN_OUT, CREATE_LEAD, FETCH_LEAD, FETCH_LEADS, DELETE_LEAD, EDIT_LEAD, SCRAPE_LEADS } from \"./types\";\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createLead = function createLead(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var userId, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userId = getState().auth.userId;\n                _context.next = 3;\n                return leads.post(\"/api/leads\", _objectSpread({}, formValues));\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_LEAD,\n                  payload: response.data\n                }); // Do some programmatic navigation to\n                // get the user back to the root route\n\n                history.push(\"/\");\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchLeads = function fetchLeads() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return leads.get(\"/api/leads\");\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: FETCH_LEADS,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchLead = function fetchLead(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return leads.get(\"/api/leads/\".concat(id));\n\n              case 2:\n                response = _context3.sent;\n                dispatch({\n                  type: FETCH_LEAD,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editLead = function editLead(id, formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return leads.put(\"/api/leads/\".concat(id), formValues);\n\n              case 2:\n                response = _context4.sent;\n                dispatch({\n                  type: EDIT_LEAD,\n                  payload: response.data\n                });\n                history.push(\"/\");\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteLead = function deleteLead(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return leads.delete(\"/api/leads/\".concat(id));\n\n              case 2:\n                response = _context5.sent;\n                dispatch({\n                  type: DELETE_LEAD,\n                  payload: id\n                });\n                history.push(\"/\");\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var scrapeLeads = function scrapeLeads(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var request, json, options;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                request = require(\"request\");\n                json = {\n                  output: \"first-result-object\",\n                  argument: {\n                    sessionCookie: formValues.linkedin_session_cookie,\n                    searches: formValues.sales_navigator_search_url,\n                    numberOfProfiles: 300,\n                    extractDefaultUrl: false,\n                    removeDuplicateProfiles: true\n                  }\n                };\n                options = {\n                  url: \"https://phantombuster.com/api/v1/agent/67199/launch\",\n                  headers: {\n                    \"X-Phantombuster-Key-1\": \"PU0PezTj0gc1Ei3erMiLc3cnLolEkA7R\"\n                  },\n                  json: json\n                };\n                request.post(options, function (err, httpResponse, body) {\n                  return console.log(err || JSON.stringify(body, null, \"\\t\"));\n                });\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x7) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/kara/code/kara22/comet_sdr_hunting/client/src/actions/index.js"],"names":["leads","history","SIGN_IN","SIGN_OUT","CREATE_LEAD","FETCH_LEAD","FETCH_LEADS","DELETE_LEAD","EDIT_LEAD","SCRAPE_LEADS","signIn","userId","type","payload","signOut","createLead","formValues","dispatch","getState","auth","post","response","data","push","fetchLeads","get","fetchLead","id","editLead","put","deleteLead","delete","scrapeLeads","request","require","json","output","argument","sessionCookie","linkedin_session_cookie","searches","sales_navigator_search_url","numberOfProfiles","extractDefaultUrl","removeDuplicateProfiles","options","url","headers","err","httpResponse","body","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import leads from \"../apis/leads\";\nimport history from \"../history\";\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_LEAD,\n    FETCH_LEAD,\n    FETCH_LEADS,\n    DELETE_LEAD,\n    EDIT_LEAD,\n    SCRAPE_LEADS\n} from \"./types\";\n\nexport const signIn = userId => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    };\n};\n\nexport const createLead = formValues => async (dispatch, getState) => {\n    const { userId } = getState().auth;\n    const response = await leads.post(\"/api/leads\", { ...formValues });\n    dispatch({ type: CREATE_LEAD, payload: response.data });\n    // Do some programmatic navigation to\n    // get the user back to the root route\n    history.push(\"/\");\n};\n\nexport const fetchLeads = () => async dispatch => {\n    const response = await leads.get(\"/api/leads\");\n    dispatch({ type: FETCH_LEADS, payload: response.data });\n};\n\nexport const fetchLead = id => async dispatch => {\n    const response = await leads.get(`/api/leads/${id}`);\n    dispatch({ type: FETCH_LEAD, payload: response.data });\n};\n\nexport const editLead = (id, formValues) => async dispatch => {\n    const response = await leads.put(`/api/leads/${id}`, formValues);\n    dispatch({ type: EDIT_LEAD, payload: response.data });\n    history.push(\"/\");\n};\n\nexport const deleteLead = id => async dispatch => {\n    const response = await leads.delete(`/api/leads/${id}`);\n    dispatch({ type: DELETE_LEAD, payload: id });\n    history.push(\"/\");\n};\n\nexport const scrapeLeads = formValues => async dispatch => {\n    const request = require(\"request\");\n    const json = {\n        output: \"first-result-object\",\n        argument: {\n            sessionCookie: formValues.linkedin_session_cookie,\n            searches: formValues.sales_navigator_search_url,\n            numberOfProfiles: 300,\n            extractDefaultUrl: false,\n            removeDuplicateProfiles: true\n        }\n    };\n    const options = {\n        url: \"https://phantombuster.com/api/v1/agent/67199/launch\",\n        headers: {\n            \"X-Phantombuster-Key-1\": \"PU0PezTj0gc1Ei3erMiLc3cnLolEkA7R\"\n        },\n        json\n    };\n    request.post(options, (err, httpResponse, body) =>\n        console.log(err || JSON.stringify(body, null, \"\\t\"))\n    );\n};\n"]},"metadata":{},"sourceType":"module"}